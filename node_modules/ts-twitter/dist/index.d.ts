import { Tweet, IUserTimelineOptions, User, IUserLookup, TweetSearchResult, ITweetSearch } from "./interfaces";
export { IUserTimelineOptions, ITweetSearch, ITimelineOptions, IHomeTimelineOptions, IUserLookup, Tweet, TweetEntities, Hashtag, EntitiesMedia, Sizes, Large, URL, UserMention, TweetExtendedEntities, QuotedStatus, Place, Attributes, BoundingBox, User, UserEntities, Description, RetweetedStatus, RetweetedStatusExtendedEntities, Media1, TweetSearchResult, SearchMetadata } from "./interfaces";
export declare class Twitter {
    _twitter_api: string;
    _oauth2_url: string;
    client_id: string;
    client_secret: string;
    application_key?: string;
    application_secret?: string;
    access_token?: string;
    constructor(client_id?: string, client_secret?: string, application_key?: string, application_secret?: string, access_token?: string);
    /**
     * Get any array of twwets based in an api call
     * You can pass query parameters ad the parameters argument
     * @param url
     * @param parameters
     */
    getTweetsFromApi(url: string, parameters: any): Promise<Array<Tweet>>;
    getUserTimeline(parameters: IUserTimelineOptions): Promise<Array<Tweet>>;
    getStatusesShow(parameters: any): Promise<Array<Tweet>>;
    getUsersLookup(parameters: IUserLookup): Promise<Array<User>>;
    getUser(parameters: IUserLookup): Promise<User>;
    searchTweets(parameters: ITweetSearch): Promise<TweetSearchResult>;
    GetOAuthToken(): Promise<string | undefined>;
    private getFromApi(url, parameters);
}
